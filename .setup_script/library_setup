#!/bin/sh

DEVSETTING_DIR=$HOME/.devsetting

## Check current environments #################################################
supportNVIM=0
case "$(uname -s)" in
    Linux*)     machine=Linux; supportNVIM=1;;
    Darwin*)    machine=Mac; supportNVIM=1;;
    CYGWIN*)    machine=Cygwin;;
    MINGW*)     machine=MinGw;;
    *)          machine="UNKNOWN:$(uname -s)"
esac

dist="Unsupported"
if [ "$machine" = "Linux" ]; then
    case "$(cat /etc/issue)" in
        *Ubuntu*)   dist=Ubuntu;;
        *SUSE*)     dist=SUSE;;
        *)          dist="Unsupported"
    esac
fi

# NeoVim - https://github.com/neovim/neovim/wiki/Installing-Neovim
if [ $supportNVIM = 1 ] && [ -z "$(command -v nvim)" ] && [ ! -f "$DEVSETTING_DIR/bin/nvim" ]; then
    if [ "$dist" = "SUSE" ]; then
        cd $DEVSETTING_DIR/bin
        wget https://github.com/neovim/neovim/releases/download/v0.3.4/nvim.appimage --no-check-certificate
        chmod +x nvim.appimage
        mv nvim.appimage nvim
    elif [ "$dist" = "Ubuntu" ]; then
        echo "Please run \"sudo apt-get install nvim\""
    elif [ "$dist" = "Unsupported" ]; then
        echo "this distribution doesn't support nvim - $dist"
    fi
fi

## Install prerequiste library - need root access #############################
if [ "$dist" = "SUSE" ]; then
    echo "SUSE"
    sudo zypper install --type pattern Basis-Devel
    sudo zypper install libevent-devel ncurses-devel        # for tmux
    sudo zypper install pcre-devel zlib-devel xz-devel      # for ag
    sudo zypper install readline-devel                      # for cgdb
elif [ "$dist" = "Ubuntu" ]; then
    echo "Ubuntu"
    sudo apt-get install -y build-essential
    sudo apt-get install -y autotools-dev automake libevent-dev libncurses-dev pkg-config   # for tmux
    sudo apt-get install -y texinfo libreadline-dev                                         # for cgdb
    sudo apt-get install -y automake pkg-config libpcre3-dev zlib1g-dev liblzma-dev         # for ag
fi

## Download / Install external libraries ######################################
install_lib() {
    NAME=$1
    SRC=$2
    OUT=$3
    # Download Library
    if [ ! -d "$DEVSETTING_DIR/git/$NAME" ]; then
        case "$SRC" in
            *tar.gz)
                wget $SRC -P $DEVSETTING_DIR/git --no-check-certificate
                fileName=${SRC##*/}
                tar zxvf $DEVSETTING_DIR/git/$fileName -C $DEVSETTING_DIR/git
                rm $DEVSETTING_DIR/git/$fileName
                mv $DEVSETTING_DIR/git/${fileName%.tar.gz} $DEVSETTING_DIR/git/$NAME
                ;;
            *.git)
                git clone $SRC $DEVSETTING_DIR/git/$NAME
                ;;
            *github*)
                git clone $SRC $DEVSETTING_DIR/git/$NAME
                ;;
            *)
                echo "Unable to download library"
                echo "Lib: $NAME / Address: $SRC"
                ;;
        esac
    fi

    if [ -z $OUT ]; then
        echo "just downloading"
        return 0
    fi

    outputName="$DEVSETTING_DIR/git/$NAME/$OUT"
    if [ "$machine" = "Cygwin" ] || [ "$machine" = "MinGw" ]; then
        outputName="$outputName.exe"
    fi

    # Build Library
    if [ -d "$DEVSETTING_DIR/git/$NAME" ] && [ ! -f $outputName ]; then
        cd $DEVSETTING_DIR/git/$NAME
        if [ -f "autogen.sh" ]; then
            sh ./autogen.sh
        fi
        if [ -f "configure" ]; then
            ./configure && make
        fi
    fi

    # Copy Library
    if [ -f "$outputName" ]; then
        cp -f "$outputName" "$DEVSETTING_DIR/bin/$NAME"
    else
        echo "$NAME was not installed"
    fi
}

install_lib ag https://github.com/ggreer/the_silver_searcher.git ag
if [ ! "$dist" = "SUSE" ]; then
    # cgdb has build errors in SUSE ..
    install_lib cgdb git://github.com/cgdb/cgdb.git cgdb/cgdb
fi
install_lib lynx https://invisible-mirror.net/archives/lynx/tarballs/lynx2.8.9rel.1.tar.gz lynx
install_lib tig https://github.com/jonas/tig.git src/tig
install_lib tig-molokai https://github.com/edentsai/tig-theme-molokai-like.git
install_lib tmux https://github.com/tmux/tmux.git tmux
install_lib uctags https://github.com/universal-ctags/ctags.git ctags
